package android.ext.content.image;

import android.content.Context;
import android.content.res.TypedArray;
import android.ext.content.AsyncLoader.Binder;
import android.ext.util.DebugUtils;
import android.graphics.drawable.Drawable;
import android.util.AttributeSet;
import android.widget.ImageView;

/**
 * Class <tt>DrawableBinder</tt> allows to bind the {@link Drawable} to the {@link ImageView}.
 * <h2>Usage</h2>
 * <p>Here is a xml resource example:</p><pre>
 * &lt;DrawableBinder xmlns:app="http://schemas.android.com/apk/res-auto"
 *     app:defaultImage="@drawable/ic_placeholder" /&gt;</pre>
 * @author Garfield
 */
public class DrawableBinder<URI> implements Binder<URI, Object, Drawable> {
    private static int[] DRAWABLE_BINDER_ATTRS;
    private final Drawable mDefaultImage;

    /**
     * Constructor
     * @param defaultImage May be <tt>null</tt>. The <tt>Drawable</tt>
     * to be used when the image is loading.
     * @see #DrawableBinder(Context, AttributeSet)
     */
    public DrawableBinder(Drawable defaultImage) {
        mDefaultImage = defaultImage;
    }

    /**
     * Constructor
     * @param context The <tt>Context</tt>.
     * @param attrs The base set of attribute values.
     * @see #DrawableBinder(Drawable)
     */
    public DrawableBinder(Context context, AttributeSet attrs) {
        DebugUtils.__checkError(DRAWABLE_BINDER_ATTRS == null, "The " + getClass().getName() + " did not call DrawableBinder.initAttrs()");
        final TypedArray a = context.obtainStyledAttributes(attrs, DRAWABLE_BINDER_ATTRS);
        mDefaultImage = a.getDrawable(0 /* R.styleable.DrawableBinder_defaultImage */);
        a.recycle();
    }

    /**
     * Returns the default image associated with this binder.
     * @return The <tt>Drawable</tt> or <tt>null</tt>.
     */
    public final Drawable getDefaultImage() {
        return mDefaultImage;
    }

    @Override
    public void bindValue(URI uri, Object[] params, Object target, Drawable value, int state) {
        ((ImageView)target).setImageDrawable(value != null ? value : mDefaultImage);
    }

    /**
     * Initialize the {@link DrawableBinder} styleable. <p>Note: This method recommended call in the
     * <tt>Application's</tt> static constructor.</p>
     * <p>Includes the following attributes:
     * <table><colgroup align="left" /><colgroup align="left" /><colgroup align="center" />
     * <tr><th>Attribute</th><th>Type</th><th>Index</th></tr>
     * <tr><td><tt>defaultImage</tt></td><td>reference</td><td>0</td></tr>
     * </table></p>
     * @param attrs The <tt>R.styleable.DrawableBinder</tt> styleable, as generated by the aapt tool.
     */
    public static void initAttrs(int[] attrs) {
        DRAWABLE_BINDER_ATTRS = attrs;
    }
}
