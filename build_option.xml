<?xml version="1.0" encoding="UTF-8"?>
<project name="option" default="" basedir=".">
    <!-- compilation options -->
    <property name="java.source" value="1.7" />
    <property name="java.target" value="1.7" />
    <property name="libs.jar.dir" value="E:/Include/java" />

    <!-- properties for signing -->
    <property name="key.store" value="${basedir}/AuroraKS.keystore" />
    <property name="key.alias" value="aurora" />
    <property name="key.store.password" value="QEDdfx@!34" />
    <property name="key.alias.password" value="lk#$AA78YG" />

    <!-- pre-build target -->
    <target name="-pre-build">
        <!-- clean bin and gen dir -->
        <delete dir="${out.absolute.dir}" verbose="${verbose}" />
        <delete dir="${gen.absolute.dir}" verbose="${verbose}" />

        <!-- modify AndroidManifest.xml versionCode, versionName -->
        <echo message="versionCode : ${version.code}" />
        <echo message="versionName : ${version.name}" />
        <replaceregexp file="${manifest.abs.file}" match="\bandroid:versionCode=&quot;.*&quot;" replace="android:versionCode=&quot;${version.code}&quot;" byline="false" encoding="utf-8" />
        <replaceregexp file="${manifest.abs.file}" match="\bandroid:versionName=&quot;.*&quot;" replace="android:versionName=&quot;${version.name}&quot;" byline="false" encoding="utf-8" />

        <!-- modify Version.java VERSION_CODE, VERSION_NAME
        <replaceregexp file="${src.dir}/com/xxx/Version.java" match="\bVERSION_CODE\s*=.*;" replace="VERSION_CODE = ${version.code};" byline="false" encoding="utf-8" />
        <replaceregexp file="${src.dir}/com/xxx/Version.java" match="\bVERSION_NAME\s*=.*;" replace="VERSION_NAME = &quot;${version.name}&quot;;" byline="false" encoding="utf-8" />
        -->
    </target>

    <!-- -pre-build-debug-mode target -->
    <target name="-pre-build-debug-mode">
        <!-- debug output filename -->
        <echo level="info">Build the ${ant.project.name} in DEBUG mode.</echo>
        <property name="out.file.dir" value="debug" />
        <property name="out.file.name" value="${ant.project.name}_${version.name}_debug.apk" />
        <property name="out.final.file" location="${out.absolute.dir}/${out.file.name}" />
        <property name="funshion.libs.dir" value="${basedir}/funshion/debug" />
    </target>

    <target name="-set-debug-files" depends="-pre-build-debug-mode, android_rules.-set-debug-files" />

    <!-- -pre-build-release-mode target -->
    <target name="-pre-build-release-mode">
        <!-- release output filename -->
        <echo level="info">Build the ${ant.project.name} in RELEASE mode.</echo>
        <property name="out.file.dir" value="release" />
        <property name="out.file.name" value="${ant.project.name}_${version.name}_release.apk" />
        <property name="out.final.file" location="${out.absolute.dir}/${out.file.name}" />
        <property name="funshion.libs.dir" value="${basedir}/funshion/release" />
    </target>

    <target name="-set-release-mode" depends="-pre-build-release-mode, android_rules.-set-release-mode" />

    <!-- -pre-compile target -->
    <target name="-pre-compile">
        <!-- copy so files -->
        <echo message="Copy libs from ${funshion.libs.dir} to ${jar.libs.dir}" />
        <copy todir="${jar.libs.dir}" overwrite="true">
            <fileset dir="${funshion.libs.dir}" excludes="**/*.jar" />
        </copy>

        <!-- include jars -->
        <path id="zxing.jar.path">
            <path path="${toString:project.all.jars.path}" />
            <pathelement location="${libs.jar.dir}/zxing/zxing.jar" />
        </path>

        <path id="vasdolly.jar.path">
            <path path="${toString:project.all.jars.path}" />
            <pathelement location="${libs.jar.dir}/vasdolly/vasdolly.jar" />
        </path>

        <path id="funshion.jar.path">
            <path path="${toString:project.all.jars.path}" />
            <pathelement location="${funshion.libs.dir}/funshion.jar" />
        </path>

        <path id="android.sdk.stubs.jar.path">
            <path path="${toString:project.target.class.path}" />
            <pathelement location="${libs.jar.dir}/android/android-sdk-stubs.jar" />
        </path>

        <path id="recyclerview.jar.path">
            <path path="${toString:project.all.jars.path}" />
            <pathelement location="${libs.jar.dir}/recyclerview/recyclerview-v7.jar" />
        </path>

        <path id="support.v4.jar.path">
            <path path="${toString:project.all.jars.path}" />
            <pathelement location="${sdk.dir}/extras/android/support/v7/appcompat/libs/android-support-v4.jar" />
        </path>

        <path id="project.all.jars.path">
            <path refid="zxing.jar.path" />
            <path refid="vasdolly.jar.path" />
            <path refid="funshion.jar.path" />
            <path refid="support.v4.jar.path" />
            <path refid="recyclerview.jar.path" />
        </path>

        <path id="project.target.class.path">
            <path refid="android.sdk.stubs.jar.path" />
        </path>

        <echo message="library jars : ${toString:project.target.class.path}" />
        <echo message="program jars : ${toString:project.all.jars.path}" />
    </target>

    <!-- post-build target -->
    <target name="-post-build">
        <property name="out.final.dir" value="${basedir}/outputs/${version.name}" />

        <!-- copy mapping files -->
        <echo level="info">Copy mapping files...</echo>
        <mkdir dir="${out.final.dir}/mapping" />
        <copy todir="${out.final.dir}/mapping" failonerror="false">
            <fileset dir="${out.absolute.dir}/proguard" includes="*.txt" />
        </copy>

        <!-- clean temp files -->
        <echo level="info">Deletes temp files...</echo>
        <delete includeEmptyDirs="true" verbose="${verbose}">
            <fileset dir="${out.absolute.dir}" excludes="${out.file.name}" />
        </delete>

        <!-- build channel apk files -->
        <property name="vasdolly.jar.path" value="${libs.jar.dir}/vasdolly/libs/vasdolly.jar" />
        <exec executable="cmd.exe">
            <arg line="/C java -jar ${vasdolly.jar.path} put -c ${basedir}/channel.txt ${out.final.file} ${out.absolute.dir} " />
        </exec>

        <!-- copy the apk files to out directory -->
        <mkdir dir="${out.final.dir}/${out.file.dir}" />
        <copy todir="${out.final.dir}/${out.file.dir}" overwrite="true">
            <fileset dir="${out.absolute.dir}" />
        </copy>
    </target>

    <!-- target all -->
    <target name="all">
        <antcall target="debug" inheritAll="false" inheritRefs="false" />
        <antcall target="release" inheritAll="false" inheritRefs="false" />
    </target>

</project>
