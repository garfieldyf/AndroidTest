<?xml version="1.0" encoding="UTF-8"?>
<project name="option" default="" basedir=".">
    <!-- compilation options -->
    <property name="java.source" value="1.7" />
    <property name="java.target" value="1.7" />
    <property name="library.jars.dir" value="E:/Include/java" />

    <!-- version.code, version.name -->
    <property name="version.code" value="1" />
    <property name="version.name" value="1.0.0" />

    <!-- pre-build target -->
    <target name="-pre-build">
        <!-- clean bin and gen dir -->
        <delete dir="${out.absolute.dir}" verbose="${verbose}" />
        <delete dir="${gen.absolute.dir}" verbose="${verbose}" />
    </target>

    <!-- include jars -->
    <target name="-pre-compile">
        <!-- modify AndroidManifest.xml versionCode, versionName -->
        <echo message="versionCode : ${version.code}" />
        <echo message="versionName : ${version.name}" />
        <replaceregexp file="${manifest.abs.file}" match="android:versionCode=&quot;.*&quot;" replace="android:versionCode=&quot;${version.code}&quot;" byline="false" encoding="utf-8" />
        <replaceregexp file="${manifest.abs.file}" match="android:versionName=&quot;.*&quot;" replace="android:versionName=&quot;${version.name}&quot;" byline="false" encoding="utf-8" />

        <path id="zxing.jar.path">
            <path path="${toString:project.all.jars.path}" />
            <pathelement location="${library.jars.dir}/zxing/zxing.jar" />
        </path>

        <path id="vasdolly.jar.path">
            <path path="${toString:project.all.jars.path}" />
            <pathelement location="${library.jars.dir}/vasdolly/vasdolly-channel.jar" />
        </path>

        <path id="support.v4.jar.path">
            <path path="${toString:project.all.jars.path}" />
            <pathelement location="${sdk.dir}/extras/android/support/v7/appcompat/libs/android-support-v4.jar" />
        </path>

        <path id="recyclerview.jar.path">
            <path path="${toString:project.all.jars.path}" />
            <pathelement location="${library.jars.dir}/recyclerview/recyclerview-v7.jar" />
        </path>

        <path id="android.internal.sdk.jar.path">
            <path path="${toString:project.target.class.path}" />
            <pathelement location="${library.jars.dir}/android/android-sdk-internal.jar" />
        </path>

        <path id="project.all.jars.path">
            <path refid="zxing.jar.path" />
            <path refid="vasdolly.jar.path" />
            <path refid="funshion.jar.path" />
            <path refid="support.v4.jar.path" />
            <path refid="recyclerview.jar.path" />
        </path>

        <path id="project.target.class.path">
            <path refid="android.internal.sdk.jar.path" />
        </path>

        <echo message="library jars : ${toString:project.target.class.path}" />
        <echo message="program jars : ${toString:project.all.jars.path}" />
    </target>

    <!-- debug output filename -->
    <target name="-rename-debug-out-file">
        <!-- call native build
        <ant antfile="${basedir}/jni/build.xml" target="debug" inheritAll="false" inheritRefs="false" />
        -->

        <property name="out.file.name" value="${ant.project.name}_${version.name}_debug.apk" />
        <property name="out.final.file" location="${out.absolute.dir}/${out.file.name}" />

        <!-- copy debug so files -->
        <copy todir="${jar.libs.dir}" overwrite="true">
            <fileset dir="${basedir}/lib/debug" excludes="**/*.jar" />
        </copy>

        <path id="funshion.jar.path">
            <pathelement location="${basedir}/lib/debug/funshion.jar" />
        </path>
    </target>

    <target name="-set-debug-files" depends="-rename-debug-out-file, android_rules.-set-debug-files" />

    <!-- release output filename -->
    <target name="-rename-release-out-file">
        <!-- call native build
        <ant antfile="${basedir}/jni/build.xml" target="release" inheritAll="false" inheritRefs="false" />
        -->

        <property name="out.file.name" value="${ant.project.name}_${version.name}_release.apk" />
        <property name="out.final.file" location="${out.absolute.dir}/${out.file.name}" />

        <!-- copy release so files -->
        <copy todir="${jar.libs.dir}" overwrite="true">
            <fileset dir="${basedir}/lib/release" excludes="**/*.jar" />
        </copy>

        <path id="funshion.jar.path">
            <pathelement location="${basedir}/lib/release/funshion.jar" />
        </path>
    </target>

    <target name="-set-release-mode" depends="-rename-release-out-file, android_rules.-set-release-mode" />

    <!-- properties for signing -->
    <property name="key.store" value="${basedir}/AuroraKS.keystore" />
    <property name="key.alias" value="aurora" />
    <property name="key.store.password" value="QEDdfx@!34" />
    <property name="key.alias.password" value="lk#$AA78YG" />

    <!-- post-build target -->
    <target name="-post-build">
        <property name="mapping.file.name" value="${ant.project.name}_${version.name}_mapping.txt" />

        <!-- copy mapping file -->
        <echo level="info">Copy mapping file : ${mapping.file.name}</echo>
        <copy file="${out.absolute.dir}/proguard/mapping.txt" tofile="${out.absolute.dir}/${mapping.file.name}" failonerror="false" />

        <!-- clean temp files -->
        <echo level="info">Deletes temp file...</echo>
        <delete includeEmptyDirs="true" verbose="${verbose}">
            <fileset dir="${out.absolute.dir}" excludes="${out.file.name} ${mapping.file.name}" />
        </delete>

        <!-- build channel apks -->
        <property name="vasdolly.channel.jar.path" value="${library.jars.dir}/vasdolly/vasdolly.jar" />
        <exec executable="cmd.exe">
            <arg line="/C java -jar ${vasdolly.channel.jar.path} put -c ${basedir}/channel.txt ${out.final.file} ${out.absolute.dir} " />
        </exec>
    </target>
</project>
